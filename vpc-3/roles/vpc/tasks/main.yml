---
- name:                     Create VPC
  ec2_vpc_net:
    state:                  present
    region:                 "{{ vpc_region }}"
    name:                   "{{ vpc_name }}"
    cidr_block:             "{{ vpc_cidr_block }}"
    resource_tags:
      Name:                 "{{ vpc_name }}"
      Environment:          "{{env_name}}"
  register:                 my_vpc
#- debug:                   var=my_vpc
- set_fact:
    vpc_id:                 "{{ my_vpc.vpc.id }}"

- name:                     Create DMZ public subnet
  ec2_vpc_subnet:
    state:                  present
    region:                 "{{ vpc_region }}"
    vpc_id:                 "{{ vpc_id }}"
    cidr:                   "{{ dmz_pub_subnet_cidr }}"
    az:                     "{{ dmz_pub_subnet_az }}"
    resource_tags:
      Name:                 "{{ dmz_pub_subnet_cidr }}|{{ dmz_pub_subnet_az }}"
      Type:                 "Public"
      Tier:                 "DMZ"
  register:                 my_dmz_pub_subnet
#- debug:                   var=my_dmz_pub_subnet
- set_fact:
    dmz_pub_subnet_id:      "{{ my_dmz_pub_subnet.subnet.id }}"

- name:                     Create Web private subnet
  ec2_vpc_subnet:
    state:                  present
    region:                 "{{ vpc_region }}"
    vpc_id:                 "{{ vpc_id }}"
    cidr:                   "{{ web_pri_subnet_cidr }}"
    az:                     "{{ web_pri_subnet_az }}"
    resource_tags:
      Name:                 "{{ web_pri_subnet_cidr }}|{{ web_pri_subnet_az }}"
      Type:                 "Private"
      Tier:                 "Web/App"
  register:                 my_web_pri_subnet
#- debug:                   var=my_web_pri_subnet
- set_fact:
    web_pri_subnet_id:      "{{ my_web_pri_subnet.subnet.id }}"

- name:                     Create Db private subnet
  ec2_vpc_subnet:
    state:                  present
    region:                 "{{ vpc_region }}"
    vpc_id:                 "{{ vpc_id }}"
    cidr:                   "{{ db_pri_subnet_cidr }}"
    az:                     "{{ db_pri_subnet_az }}"
    resource_tags:
      Name:                 "{{ db_pri_subnet_cidr }}|{{ db_pri_subnet_az }}"
      Type:                 "Private"
      Tier:                 "Db"
  register:                 my_db_pri_subnet
#- debug:                   var=my_db_pri_subnet
- set_fact:
    db_pri_subnet_id:       "{{ my_db_pri_subnet.subnet.id }}"

- name:                     Create Internet gateway
  ec2_vpc_igw:
    state:                  present
    region:                 "{{ vpc_region }}"
    vpc_id:                 "{{ vpc_id }}"
    resource_tags:
      Name:                 "IGW"
      Type:                 "Public"
  register:                 my_igw
#- debug:                   var=my_igw
- set_fact:
    igw_id:                 "{{ my_igw.gateway_id }}"

- name:                     Create NAT gateway
  ec2_vpc_nat_gateway:
    state:                  present
    subnet_id:              "{{ dmz_pub_subnet_id }}"
    wait:                   yes
    region:                 "{{ vpc_region }}"
    if_exist_do_not_create: true
#    resource_tags:         { "Name":"NGW", "Type":"Private" }
  register:                 my_ngw
#- debug:                   var=my_ngw
- set_fact:
    ngw_id:                 "{{ my_ngw.nat_gateway_id }}"

- name:                     Setup public subnet routes
  ec2_vpc_route_table:
    state:                  present
    region:                 "{{ vpc_region }}"
    vpc_id:                 "{{ vpc_id }}"
    tags:
      Name:                 "PublicRoute"
    subnets:
      - "{{ dmz_pub_subnet_id }}"
    routes:
      - dest:               "0.0.0.0/0"
        gateway_id:         "{{ igw_id }}"
  register:                 my_pub_rt
#- debug:                   var=my_pub_rt

- name:                     Setup private subnet routes
  ec2_vpc_route_table:
    vpc_id:                 "{{ vpc_id }}"
    region:                 "{{ vpc_region }}"
    tags:
      Name:                 "PrivateRoute"
    subnets:
      - "{{ web_pri_subnet_id }}"
      - "{{ db_pri_subnet_id }}"
    routes:
      - dest:               "0.0.0.0/0"
        gateway_id:         "{{ ngw_id }}"
  register:                 my_pri_rt
#- debug:                   var=my_pri_rt

- name:                     Create DMZ security group
  ec2_group:
    name:                   "DMZ-SG"
    description:            "Allow SSH access"
    vpc_id:                 "{{ vpc_id }}"
    rules:
      - proto:              tcp
        from_port:          22
        to_port:            22
        cidr_ip:            0.0.0.0/0
  register:                 my_dmz_sg
#- debug:                   var=my_ssh_sg

- name:                     Create RPXY security group
  ec2_group:
    name:                   "RPXY-SG"
    description:            "Allow SSH/HTTP/HTTPS access"
    vpc_id:                 "{{ vpc_id }}"
    rules:
      - proto:              tcp
        from_port:          22
        to_port:            22
        cidr_ip:            "{{ dmz_pub_subnet_cidr }}"
      - proto:              tcp
        from_port:          80
        to_port:            80
        cidr_ip:            "{{ web_pri_subnet_cidr }}"
      - proto:              tcp
        from_port:          443
        to_port:            443
        cidr_ip:            "{{ web_pri_subnet_cidr }}"
  register:                 my_rproxy_sg
#- debug:                   var=my_rproxy_sg

- name:                     Create Web security group
  ec2_group:
    name:                   "WEB-SG"
    description:            "Allow SSH/HTTP/HTTPS access"
    vpc_id:                 "{{ vpc_id }}"
    rules:
      - proto:              tcp
        from_port:          22
        to_port:            22
        cidr_ip:            "{{ dmz_pub_subnet_cidr }}"
      - proto:              tcp
        from_port:          80
        to_port:            80
        cidr_ip:            "{{ web_pri_subnet_cidr }}"
      - proto:              tcp
        from_port:          443
        to_port:            443
        cidr_ip:            "{{ web_pri_subnet_cidr }}"
  register:                 my_web_sg
#- debug:                   var=my_web_sg

- name:                     Create DB security group
  ec2_group:
    name:                   "DB-SG"
    description:            "Allow SSH/DB access"
    vpc_id:                 "{{ vpc_id }}"
    rules:
      - proto:              tcp
        from_port:          22
        to_port:            22
        cidr_ip:            "{{ dmz_pub_subnet_cidr }}"
      - proto:              tcp
        from_port:          3306
        to_port:            3306
        cidr_ip:            "{{ db_pri_subnet_cidr }}"
  register:                 my_db_sg
#- debug:                   var=my_db_sg
